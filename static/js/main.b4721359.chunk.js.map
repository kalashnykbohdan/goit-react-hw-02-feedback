{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Sections/Sections.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","key","uuid","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Sections","title","children","defaultProps","Notification","message","App","state","handleChange","e","target","setState","prevState","countTotalFeedback","Object","values","reduce","t","n","countPositiveFeedbackPercentage","positiveFeedback","Math","trunc","objKey","keys","this","Component","ReactDOM","render","document","querySelector"],"mappings":"4QAoBeA,G,MAfS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpB,6BAEKD,EAAQE,KAAI,SAAAC,GAAM,OACf,4BAAQC,IAAKC,iBAAQC,KAAMH,EAAQI,KAAK,SAASC,QAASP,GAAkBE,SCkBzEM,G,MAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,oCAEQ,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,QCVhB,SAASC,EAAT,GAAqC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SACtB,OACI,iCACKD,GAAS,4BAAKA,GACdC,GAKbF,EAASG,aAAe,CACpBF,MAAO,IAQID,QCVAI,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,oCACI,2BAAIA,KCDKC,E,4MAIjBC,MAAQ,CACJZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAITW,aAAe,SAAAC,GAAK,IACRlB,EAASkB,EAAEC,OAAXnB,KACR,EAAKoB,UAAS,SAAAC,GACV,OAAO,eACFrB,EAAOqB,EAAUrB,GAAQ,O,EAKtCsB,mBAAqB,WAEjB,OAAOC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAG1DC,gCAAkC,WAC9B,IAAMC,EAAuC,IAAlB,EAAKb,MAAMZ,KAAa,EAAKkB,qBACxD,OAAOQ,KAAKC,MAAMF,I,uDAIlB,IAAMG,EAAST,OAAOU,KAAKC,KAAKlB,OAClBkB,KAAKZ,qBACnB,OACI,6BACE,kBAAC,EAAD,CAAUZ,MAAO,yBACf,kBAAC,EAAD,CAAiBhB,QAASsC,EAAQrC,gBAAiBuC,KAAKjB,gBAG1D,kBAAC,EAAD,CAAUP,MAAM,cACiB,IAA9BwB,KAAKZ,qBAIN,kBAAC,EAAD,CAAcR,QAAS,sBAIvB,kBAAC,EAAD,CAEIV,KAAQ8B,KAAKlB,MAAMZ,KACnBC,QAAW6B,KAAKlB,MAAMX,QACtBC,IAAO4B,KAAKlB,MAAMV,IAClBC,MAAS2B,KAAKZ,qBACdd,mBAAsB0B,KAAKN,0C,GAtDdO,aCDjCC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,W","file":"static/js/main.b4721359.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { uuid } from 'uuidv4';\r\nimport style from'./onFeedback.module.css';\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n    <div>\r\n        \r\n        {options.map(option => (\r\n            <button key={uuid()} name={option} type=\"button\" onClick={onLeaveFeedback}>{option}</button>\r\n        ))}\r\n\r\n    </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n    options: PropTypes.array.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport style from'./statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n        \r\n                <p>Good: {good}</p>\r\n                <p>Neutral: {neutral}</p>\r\n                <p>Bad: {bad}</p>\r\n                <p>Total: {total}</p>\r\n                <p>Positive feedback: {positivePercentage}%</p>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Sections({title, children}){\r\n    return (\r\n        <section>\r\n            {title && <h2>{title}</h2>}\r\n            {children}\r\n        </section>\r\n    );\r\n}\r\n\r\nSections.defaultProps = {\r\n    title: '',\r\n}\r\n\r\nSections.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    // children:PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Sections;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <>\r\n            <p>{message}</p>\r\n        </>\r\n    )\r\n}\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Sections from './Sections';\nimport Notification from './Notification';\n\nexport default class App extends Component{\n\n    static propTypes = {};\n\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n\n    }; \n\n    handleChange = e =>{\n        const { name } = e.target\n        this.setState(prevState => {\n            return {\n                [name]: prevState[name] + 1,\n            }\n        })\n    }\n\n    countTotalFeedback = () =>{\n\n        return Object.values(this.state).reduce((t, n) => t + n);\n\n    }\n    countPositiveFeedbackPercentage = () =>{\n        const positiveFeedback =  (this.state.good * 100)/(this.countTotalFeedback())\n        return Math.trunc(positiveFeedback);\n    }\n\n    render(){\n        const objKey = Object.keys(this.state)\n        const total = this.countTotalFeedback();\n        return(\n            <div>\n              <Sections title={\"Please leave feedback\"}>\n                <FeedbackOptions options={objKey} onLeaveFeedback={this.handleChange}/>\n              </Sections>\n\n              <Sections title=\"Statistics\">\n                {this.countTotalFeedback() === 0 \n\n                ?\n                \n                <Notification message={\"No feedback given\"} /> \n                \n                : \n                \n                <Statistics\n               \n                    good = {this.state.good}\n                    neutral = {this.state.neutral}\n                    bad = {this.state.bad}\n                    total = {this.countTotalFeedback()}\n                    positivePercentage = {this.countPositiveFeedbackPercentage()}\n\n                />}\n              </Sections>\n\n            </div>\n        );\n    }\n}   \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './components/App.js';\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));\n\n\n\n\n\n\n"],"sourceRoot":""}